"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaExtractor = void 0;
const Utility_1 = require("../utils/Utility");
/**
 * Schema Extractor utilities
 */
class SchemaExtractor {
    /**
     * Extract props from plain schema
     * @param schema Schema to extract
     */
    static extractPlain(schema, name) {
        const props = [];
        for (const prop of Object.keys(schema)) {
            const [propType, propFormat] = Utility_1.Utility.castJSType(typeof schema[prop]);
            props.push({
                prop,
                type: propType,
                required: undefined,
                description: undefined,
                example: undefined,
                format: propFormat,
            });
        }
        return { name, props: props.reverse() };
    }
    static extractMongoose(schema, name) {
        const props = [];
        for (const prop of Object.keys(schema.paths)) {
            const [propType, propFormat, isRequired, example] = Utility_1.Utility.castMongooseType(schema.paths[prop].instance);
            props.push({
                prop,
                type: propType,
                required: isRequired,
                description: undefined,
                example: example,
                format: propFormat,
            });
        }
        return { name, props: props.reverse() };
    }
    static extractSequelize(schema, name) {
        const props = [];
        for (const prop of Object.keys(schema)) {
            const [propType, propFormat, isRequired, example] = Utility_1.Utility.castSequelizeType(schema[prop].type.key);
            props.push({
                prop,
                type: propType,
                required: isRequired,
                description: undefined,
                example: example,
                format: propFormat,
            });
        }
        console.log(props);
        return { name, props: props.reverse() };
    }
    static extractClassProps(target, name) {
        const instance = new target();
        const props = [];
        for (const prop of Object.keys(instance)) {
            const [propType, propFormat] = Utility_1.Utility.castJSType(typeof instance[prop]);
            props.push({
                prop,
                type: propType,
                required: undefined,
                description: undefined,
                example: undefined,
                format: propFormat,
            });
        }
        return { name: name || target.name, props: props.reverse() };
    }
}
exports.SchemaExtractor = SchemaExtractor;
//# sourceMappingURL=schema.extractor.js.map